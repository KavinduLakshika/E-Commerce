-- MySQL Script generated by MySQL Workbench
-- Wed Nov 13 19:18:10 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ecommerce
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ecommerce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ecommerce` DEFAULT CHARACTER SET utf8 ;
USE `ecommerce` ;

-- -----------------------------------------------------
-- Table `ecommerce`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`customer` (
  `cusId` INT NOT NULL AUTO_INCREMENT,
  `cusName` VARCHAR(255) NOT NULL,
  `cusEmail` VARCHAR(255) NOT NULL,
  `cusPw` VARCHAR(255) NULL,
  `cusGender` VARCHAR(45) NULL,
  `cusPhone1` VARCHAR(45) NULL,
  `cusPhone2` VARCHAR(45) NULL,
  `cusCountry` VARCHAR(45) NULL,
  `cusDob` DATE NULL,
  `cusImg` VARCHAR(255) NULL,
  `cusStatus` VARCHAR(45) NOT NULL,
  `loginType` VARCHAR(45) NULL,
  `otp` VARCHAR(45) NULL,
  PRIMARY KEY (`cusId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`category` (
  `catId` INT NOT NULL AUTO_INCREMENT,
  `catName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`catId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`product` (
  `productId` INT NOT NULL AUTO_INCREMENT,
  `productName` VARCHAR(255) NOT NULL,
  `productPrice` FLOAT NOT NULL,
  `productQty` INT NOT NULL,
  `productSize` VARCHAR(45) NOT NULL,
  `productColor` VARCHAR(45) NOT NULL,
  `productDescription` VARCHAR(255) NULL,
  `productImage` VARCHAR(255) NULL,
  `productStatus` VARCHAR(45) NOT NULL,
  `category_catId` INT NOT NULL,
  PRIMARY KEY (`productId`),
  INDEX `fk_product_category_idx` (`category_catId` ASC),
  CONSTRAINT `fk_product_category`
    FOREIGN KEY (`category_catId`)
    REFERENCES `ecommerce`.`category` (`catId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`order` (
  `orderId` INT NOT NULL AUTO_INCREMENT,
  `orderQty` INT NULL,
  `orderDiscount` FLOAT NOT NULL,
  `orderPrice` FLOAT NOT NULL,
  `orderShippingFee` FLOAT NULL,
  `orderDate` DATETIME NULL,
  `product_productId` INT NOT NULL,
  `customer_cusId` INT NOT NULL,
  PRIMARY KEY (`orderId`),
  INDEX `fk_order_product1_idx` (`product_productId` ASC),
  INDEX `fk_order_customer1_idx` (`customer_cusId` ASC),
  CONSTRAINT `fk_order_product1`
    FOREIGN KEY (`product_productId`)
    REFERENCES `ecommerce`.`product` (`productId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_customer1`
    FOREIGN KEY (`customer_cusId`)
    REFERENCES `ecommerce`.`customer` (`cusId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`delivery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`delivery` (
  `deliveryId` INT NOT NULL AUTO_INCREMENT,
  `deliveryCode` VARCHAR(45) NOT NULL,
  `deliveryAddress` VARCHAR(255) NOT NULL,
  `deliveryCity` VARCHAR(255) NOT NULL,
  `deliveryPostal` VARCHAR(45) NOT NULL,
  `deliveryPhone` VARCHAR(45) NOT NULL,
  `deliveryEmail` VARCHAR(255) NOT NULL,
  `deliveryFName` VARCHAR(255) NOT NULL,
  `deliveryLName` VARCHAR(255) NOT NULL,
  `deliveryMsg` VARCHAR(255) NULL,
  `deliveryStatus` VARCHAR(45) NULL,
  `customer_cusId` INT NOT NULL,
  PRIMARY KEY (`deliveryId`),
  INDEX `fk_delivery_customer1_idx` (`customer_cusId` ASC),
  CONSTRAINT `fk_delivery_customer1`
    FOREIGN KEY (`customer_cusId`)
    REFERENCES `ecommerce`.`customer` (`cusId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`delivery_has_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`delivery_has_order` (
  `delivery_deliveryId` INT NOT NULL,
  `order_orderId` INT NOT NULL,
  PRIMARY KEY (`delivery_deliveryId`, `order_orderId`),
  INDEX `fk_delivery_has_order_order1_idx` (`order_orderId` ASC),
  INDEX `fk_delivery_has_order_delivery1_idx` (`delivery_deliveryId` ASC),
  CONSTRAINT `fk_delivery_has_order_delivery1`
    FOREIGN KEY (`delivery_deliveryId`)
    REFERENCES `ecommerce`.`delivery` (`deliveryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_delivery_has_order_order1`
    FOREIGN KEY (`order_orderId`)
    REFERENCES `ecommerce`.`order` (`orderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`transaction` (
  `transactionId` INT NOT NULL AUTO_INCREMENT,
  `transactionMethod` VARCHAR(45) NULL,
  `transactionTotalPrice` FLOAT NULL,
  `transactionDiscount` FLOAT NULL,
  `transactionDate` DATETIME NULL,
  `order_orderId` INT NOT NULL,
  PRIMARY KEY (`transactionId`),
  INDEX `fk_transaction_order1_idx` (`order_orderId` ASC),
  CONSTRAINT `fk_transaction_order1`
    FOREIGN KEY (`order_orderId`)
    REFERENCES `ecommerce`.`order` (`orderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`user` (
  `userId` INT NOT NULL,
  `userFullName` VARCHAR(255) NOT NULL,
  `userName` VARCHAR(255) NOT NULL,
  `userType` VARCHAR(45) NOT NULL,
  `userPw` VARCHAR(255) NOT NULL,
  `userEmail` VARCHAR(255) NOT NULL,
  `userNic` VARCHAR(45) NOT NULL,
  `userAddress` VARCHAR(255) NOT NULL,
  `userImg` VARCHAR(255) NULL,
  `userTP` VARCHAR(45) NOT NULL,
  `userSecondTP` VARCHAR(45) NULL,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`orderProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`orderProduct` (
  `orderProductId` INT NOT NULL AUTO_INCREMENT,
  `TotalAmount` VARCHAR(255) NULL,
  `size` VARCHAR(45) NULL,
  `color` VARCHAR(45) NULL,
  `order_orderId` INT NOT NULL,
  PRIMARY KEY (`orderProductId`),
  INDEX `fk_orderProduct_order1_idx` (`order_orderId` ASC),
  CONSTRAINT `fk_orderProduct_order1`
    FOREIGN KEY (`order_orderId`)
    REFERENCES `ecommerce`.`order` (`orderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce`.`orderProduct_has_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce`.`orderProduct_has_product` (
  `orderProduct_orderProductId` INT NOT NULL,
  `product_productId` INT NOT NULL,
  PRIMARY KEY (`orderProduct_orderProductId`, `product_productId`),
  INDEX `fk_orderProduct_has_product_product1_idx` (`product_productId` ASC),
  INDEX `fk_orderProduct_has_product_orderProduct1_idx` (`orderProduct_orderProductId` ASC),
  CONSTRAINT `fk_orderProduct_has_product_orderProduct1`
    FOREIGN KEY (`orderProduct_orderProductId`)
    REFERENCES `ecommerce`.`orderProduct` (`orderProductId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderProduct_has_product_product1`
    FOREIGN KEY (`product_productId`)
    REFERENCES `ecommerce`.`product` (`productId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
